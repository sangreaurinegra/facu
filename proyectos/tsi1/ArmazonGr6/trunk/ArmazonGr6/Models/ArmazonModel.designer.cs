#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArmazonGr6.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="ArmazonBD")]
	public partial class ArmazonModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertArtCant(ArtCant instance);
    partial void UpdateArtCant(ArtCant instance);
    partial void DeleteArtCant(ArtCant instance);
    partial void InsertPlantilla(Plantilla instance);
    partial void UpdatePlantilla(Plantilla instance);
    partial void DeletePlantilla(Plantilla instance);
    partial void InsertRegistro(Registro instance);
    partial void UpdateRegistro(Registro instance);
    partial void DeleteRegistro(Registro instance);
    partial void InsertFormaPago(FormaPago instance);
    partial void UpdateFormaPago(FormaPago instance);
    partial void DeleteFormaPago(FormaPago instance);
    partial void InsertCalificacion(Calificacion instance);
    partial void UpdateCalificacion(Calificacion instance);
    partial void DeleteCalificacion(Calificacion instance);
    partial void InsertInterno(Interno instance);
    partial void UpdateInterno(Interno instance);
    partial void DeleteInterno(Interno instance);
    partial void InsertExterno(Externo instance);
    partial void UpdateExterno(Externo instance);
    partial void DeleteExterno(Externo instance);
    partial void InsertProveedor(Proveedor instance);
    partial void UpdateProveedor(Proveedor instance);
    partial void DeleteProveedor(Proveedor instance);
    partial void InsertSucursal(Sucursal instance);
    partial void UpdateSucursal(Sucursal instance);
    partial void DeleteSucursal(Sucursal instance);
    partial void InsertHistoricoCarrito(HistoricoCarrito instance);
    partial void UpdateHistoricoCarrito(HistoricoCarrito instance);
    partial void DeleteHistoricoCarrito(HistoricoCarrito instance);
    partial void InsertTagArticulo(TagArticulo instance);
    partial void UpdateTagArticulo(TagArticulo instance);
    partial void DeleteTagArticulo(TagArticulo instance);
    partial void InsertCloudItem(CloudItem instance);
    partial void UpdateCloudItem(CloudItem instance);
    partial void DeleteCloudItem(CloudItem instance);
    partial void InsertArticulo(Articulo instance);
    partial void UpdateArticulo(Articulo instance);
    partial void DeleteArticulo(Articulo instance);
    partial void InsertCampo(Campo instance);
    partial void UpdateCampo(Campo instance);
    partial void DeleteCampo(Campo instance);
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertCarrito(Carrito instance);
    partial void UpdateCarrito(Carrito instance);
    partial void DeleteCarrito(Carrito instance);
    #endregion
		
		public ArmazonModelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ArmazonBDConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ArmazonModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArmazonModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArmazonModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArmazonModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<ArtCant> ArtCants
		{
			get
			{
				return this.GetTable<ArtCant>();
			}
		}
		
		public System.Data.Linq.Table<Plantilla> Plantillas
		{
			get
			{
				return this.GetTable<Plantilla>();
			}
		}
		
		public System.Data.Linq.Table<Registro> Registros
		{
			get
			{
				return this.GetTable<Registro>();
			}
		}
		
		public System.Data.Linq.Table<FormaPago> FormaPagos
		{
			get
			{
				return this.GetTable<FormaPago>();
			}
		}
		
		public System.Data.Linq.Table<Calificacion> Calificacions
		{
			get
			{
				return this.GetTable<Calificacion>();
			}
		}
		
		public System.Data.Linq.Table<Interno> Internos
		{
			get
			{
				return this.GetTable<Interno>();
			}
		}
		
		public System.Data.Linq.Table<Externo> Externos
		{
			get
			{
				return this.GetTable<Externo>();
			}
		}
		
		public System.Data.Linq.Table<Proveedor> Proveedors
		{
			get
			{
				return this.GetTable<Proveedor>();
			}
		}
		
		public System.Data.Linq.Table<Sucursal> Sucursals
		{
			get
			{
				return this.GetTable<Sucursal>();
			}
		}
		
		public System.Data.Linq.Table<HistoricoCarrito> HistoricoCarritos
		{
			get
			{
				return this.GetTable<HistoricoCarrito>();
			}
		}
		
		public System.Data.Linq.Table<TagArticulo> TagArticulos
		{
			get
			{
				return this.GetTable<TagArticulo>();
			}
		}
		
		public System.Data.Linq.Table<CloudItem> CloudItems
		{
			get
			{
				return this.GetTable<CloudItem>();
			}
		}
		
		public System.Data.Linq.Table<Articulo> Articulos
		{
			get
			{
				return this.GetTable<Articulo>();
			}
		}
		
		public System.Data.Linq.Table<Campo> Campos
		{
			get
			{
				return this.GetTable<Campo>();
			}
		}
		
		public System.Data.Linq.Table<Categoria> Categorias
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Carrito> Carritos
		{
			get
			{
				return this.GetTable<Carrito>();
			}
		}
	}
	
	[Table(Name="dbo.Clientes")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idCarritoActual;
		
		private EntitySet<Calificacion> _Calificacions;
		
		private EntitySet<HistoricoCarrito> _HistoricoCarritos;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Carrito> _Carrito;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidCarritoActualChanging(int value);
    partial void OnidCarritoActualChanged();
    #endregion
		
		public Cliente()
		{
			this._Calificacions = new EntitySet<Calificacion>(new Action<Calificacion>(this.attach_Calificacions), new Action<Calificacion>(this.detach_Calificacions));
			this._HistoricoCarritos = new EntitySet<HistoricoCarrito>(new Action<HistoricoCarrito>(this.attach_HistoricoCarritos), new Action<HistoricoCarrito>(this.detach_HistoricoCarritos));
			this._Usuario = default(EntityRef<Usuario>);
			this._Carrito = default(EntityRef<Carrito>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_idCarritoActual", DbType="Int NOT NULL")]
		public int idCarritoActual
		{
			get
			{
				return this._idCarritoActual;
			}
			set
			{
				if ((this._idCarritoActual != value))
				{
					if (this._Carrito.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCarritoActualChanging(value);
					this.SendPropertyChanging();
					this._idCarritoActual = value;
					this.SendPropertyChanged("idCarritoActual");
					this.OnidCarritoActualChanged();
				}
			}
		}
		
		[Association(Name="Cliente_Calificacion", Storage="_Calificacions", ThisKey="id", OtherKey="idCliente")]
		public EntitySet<Calificacion> Calificacions
		{
			get
			{
				return this._Calificacions;
			}
			set
			{
				this._Calificacions.Assign(value);
			}
		}
		
		[Association(Name="Cliente_HistoricoCarrito", Storage="_HistoricoCarritos", ThisKey="id", OtherKey="idCliente")]
		public EntitySet<HistoricoCarrito> HistoricoCarritos
		{
			get
			{
				return this._HistoricoCarritos;
			}
			set
			{
				this._HistoricoCarritos.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Cliente", Storage="_Usuario", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Cliente = null;
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Cliente = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[Association(Name="Carrito_Cliente", Storage="_Carrito", ThisKey="idCarritoActual", OtherKey="id", IsForeignKey=true)]
		public Carrito Carrito
		{
			get
			{
				return this._Carrito.Entity;
			}
			set
			{
				Carrito previousValue = this._Carrito.Entity;
				if (((previousValue != value) 
							|| (this._Carrito.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carrito.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Carrito.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._idCarritoActual = value.id;
					}
					else
					{
						this._idCarritoActual = default(int);
					}
					this.SendPropertyChanged("Carrito");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Calificacions(Calificacion entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Calificacions(Calificacion entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_HistoricoCarritos(HistoricoCarrito entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_HistoricoCarritos(HistoricoCarrito entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[Table(Name="dbo.ArtCants")]
	public partial class ArtCant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCarrito;
		
		private int _idArticulo;
		
		private int _cantidad;
		
		private int _id;
		
		private EntityRef<Articulo> _Articulo;
		
		private EntityRef<Carrito> _Carrito;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCarritoChanging(int value);
    partial void OnidCarritoChanged();
    partial void OnidArticuloChanging(int value);
    partial void OnidArticuloChanged();
    partial void OncantidadChanging(int value);
    partial void OncantidadChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public ArtCant()
		{
			this._Articulo = default(EntityRef<Articulo>);
			this._Carrito = default(EntityRef<Carrito>);
			OnCreated();
		}
		
		[Column(Storage="_idCarrito", DbType="Int NOT NULL")]
		public int idCarrito
		{
			get
			{
				return this._idCarrito;
			}
			set
			{
				if ((this._idCarrito != value))
				{
					if (this._Carrito.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCarritoChanging(value);
					this.SendPropertyChanging();
					this._idCarrito = value;
					this.SendPropertyChanged("idCarrito");
					this.OnidCarritoChanged();
				}
			}
		}
		
		[Column(Storage="_idArticulo", DbType="Int NOT NULL")]
		public int idArticulo
		{
			get
			{
				return this._idArticulo;
			}
			set
			{
				if ((this._idArticulo != value))
				{
					if (this._Articulo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidArticuloChanging(value);
					this.SendPropertyChanging();
					this._idArticulo = value;
					this.SendPropertyChanged("idArticulo");
					this.OnidArticuloChanged();
				}
			}
		}
		
		[Column(Storage="_cantidad", DbType="Int NOT NULL")]
		public int cantidad
		{
			get
			{
				return this._cantidad;
			}
			set
			{
				if ((this._cantidad != value))
				{
					this.OncantidadChanging(value);
					this.SendPropertyChanging();
					this._cantidad = value;
					this.SendPropertyChanged("cantidad");
					this.OncantidadChanged();
				}
			}
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Association(Name="Articulo_ArtCant", Storage="_Articulo", ThisKey="idArticulo", OtherKey="id", IsForeignKey=true)]
		public Articulo Articulo
		{
			get
			{
				return this._Articulo.Entity;
			}
			set
			{
				Articulo previousValue = this._Articulo.Entity;
				if (((previousValue != value) 
							|| (this._Articulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articulo.Entity = null;
						previousValue.ArtCants.Remove(this);
					}
					this._Articulo.Entity = value;
					if ((value != null))
					{
						value.ArtCants.Add(this);
						this._idArticulo = value.id;
					}
					else
					{
						this._idArticulo = default(int);
					}
					this.SendPropertyChanged("Articulo");
				}
			}
		}
		
		[Association(Name="Carrito_ArtCant", Storage="_Carrito", ThisKey="idCarrito", OtherKey="id", IsForeignKey=true)]
		public Carrito Carrito
		{
			get
			{
				return this._Carrito.Entity;
			}
			set
			{
				Carrito previousValue = this._Carrito.Entity;
				if (((previousValue != value) 
							|| (this._Carrito.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carrito.Entity = null;
						previousValue.ArtCants.Remove(this);
					}
					this._Carrito.Entity = value;
					if ((value != null))
					{
						value.ArtCants.Add(this);
						this._idCarrito = value.id;
					}
					else
					{
						this._idCarrito = default(int);
					}
					this.SendPropertyChanged("Carrito");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Plantillas")]
	public partial class Plantilla : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private EntitySet<FormaPago> _FormaPagos;
		
		private EntitySet<Campo> _Campos;
		
		private EntitySet<Categoria> _Categorias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Plantilla()
		{
			this._FormaPagos = new EntitySet<FormaPago>(new Action<FormaPago>(this.attach_FormaPagos), new Action<FormaPago>(this.detach_FormaPagos));
			this._Campos = new EntitySet<Campo>(new Action<Campo>(this.attach_Campos), new Action<Campo>(this.detach_Campos));
			this._Categorias = new EntitySet<Categoria>(new Action<Categoria>(this.attach_Categorias), new Action<Categoria>(this.detach_Categorias));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Association(Name="Plantilla_FormaPago", Storage="_FormaPagos", ThisKey="id", OtherKey="idPlantilla")]
		public EntitySet<FormaPago> FormaPagos
		{
			get
			{
				return this._FormaPagos;
			}
			set
			{
				this._FormaPagos.Assign(value);
			}
		}
		
		[Association(Name="Plantilla_Campo", Storage="_Campos", ThisKey="id", OtherKey="idPlantilla")]
		public EntitySet<Campo> Campos
		{
			get
			{
				return this._Campos;
			}
			set
			{
				this._Campos.Assign(value);
			}
		}
		
		[Association(Name="Plantilla_Categoria", Storage="_Categorias", ThisKey="id", OtherKey="idPlantilla")]
		public EntitySet<Categoria> Categorias
		{
			get
			{
				return this._Categorias;
			}
			set
			{
				this._Categorias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FormaPagos(FormaPago entity)
		{
			this.SendPropertyChanging();
			entity.Plantilla = this;
		}
		
		private void detach_FormaPagos(FormaPago entity)
		{
			this.SendPropertyChanging();
			entity.Plantilla = null;
		}
		
		private void attach_Campos(Campo entity)
		{
			this.SendPropertyChanging();
			entity.Plantilla = this;
		}
		
		private void detach_Campos(Campo entity)
		{
			this.SendPropertyChanging();
			entity.Plantilla = null;
		}
		
		private void attach_Categorias(Categoria entity)
		{
			this.SendPropertyChanging();
			entity.Plantilla = this;
		}
		
		private void detach_Categorias(Categoria entity)
		{
			this.SendPropertyChanging();
			entity.Plantilla = null;
		}
	}
	
	[Table(Name="dbo.Registros")]
	public partial class Registro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCampo;
		
		private int _idArticulo;
		
		private string _valor;
		
		private EntityRef<Articulo> _Articulo;
		
		private EntityRef<Campo> _Campo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCampoChanging(int value);
    partial void OnidCampoChanged();
    partial void OnidArticuloChanging(int value);
    partial void OnidArticuloChanged();
    partial void OnvalorChanging(string value);
    partial void OnvalorChanged();
    #endregion
		
		public Registro()
		{
			this._Articulo = default(EntityRef<Articulo>);
			this._Campo = default(EntityRef<Campo>);
			OnCreated();
		}
		
		[Column(Storage="_idCampo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCampo
		{
			get
			{
				return this._idCampo;
			}
			set
			{
				if ((this._idCampo != value))
				{
					if (this._Campo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCampoChanging(value);
					this.SendPropertyChanging();
					this._idCampo = value;
					this.SendPropertyChanged("idCampo");
					this.OnidCampoChanged();
				}
			}
		}
		
		[Column(Storage="_idArticulo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idArticulo
		{
			get
			{
				return this._idArticulo;
			}
			set
			{
				if ((this._idArticulo != value))
				{
					if (this._Articulo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidArticuloChanging(value);
					this.SendPropertyChanging();
					this._idArticulo = value;
					this.SendPropertyChanged("idArticulo");
					this.OnidArticuloChanged();
				}
			}
		}
		
		[Column(Storage="_valor", DbType="NChar(300)")]
		public string valor
		{
			get
			{
				return this._valor;
			}
			set
			{
				if ((this._valor != value))
				{
					this.OnvalorChanging(value);
					this.SendPropertyChanging();
					this._valor = value;
					this.SendPropertyChanged("valor");
					this.OnvalorChanged();
				}
			}
		}
		
		[Association(Name="Articulo_Registro", Storage="_Articulo", ThisKey="idArticulo", OtherKey="id", IsForeignKey=true)]
		public Articulo Articulo
		{
			get
			{
				return this._Articulo.Entity;
			}
			set
			{
				Articulo previousValue = this._Articulo.Entity;
				if (((previousValue != value) 
							|| (this._Articulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articulo.Entity = null;
						previousValue.Registros.Remove(this);
					}
					this._Articulo.Entity = value;
					if ((value != null))
					{
						value.Registros.Add(this);
						this._idArticulo = value.id;
					}
					else
					{
						this._idArticulo = default(int);
					}
					this.SendPropertyChanged("Articulo");
				}
			}
		}
		
		[Association(Name="Campo_Registro", Storage="_Campo", ThisKey="idCampo", OtherKey="id", IsForeignKey=true)]
		public Campo Campo
		{
			get
			{
				return this._Campo.Entity;
			}
			set
			{
				Campo previousValue = this._Campo.Entity;
				if (((previousValue != value) 
							|| (this._Campo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campo.Entity = null;
						previousValue.Registros.Remove(this);
					}
					this._Campo.Entity = value;
					if ((value != null))
					{
						value.Registros.Add(this);
						this._idCampo = value.id;
					}
					else
					{
						this._idCampo = default(int);
					}
					this.SendPropertyChanged("Campo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FormaPagos")]
	public partial class FormaPago : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private int _idPlantilla;
		
		private string _imgUrl;
		
		private EntitySet<Carrito> _Carritos;
		
		private EntityRef<Plantilla> _Plantilla;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnidPlantillaChanging(int value);
    partial void OnidPlantillaChanged();
    partial void OnimgUrlChanging(string value);
    partial void OnimgUrlChanged();
    #endregion
		
		public FormaPago()
		{
			this._Carritos = new EntitySet<Carrito>(new Action<Carrito>(this.attach_Carritos), new Action<Carrito>(this.detach_Carritos));
			this._Plantilla = default(EntityRef<Plantilla>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_idPlantilla", DbType="Int NOT NULL")]
		public int idPlantilla
		{
			get
			{
				return this._idPlantilla;
			}
			set
			{
				if ((this._idPlantilla != value))
				{
					if (this._Plantilla.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPlantillaChanging(value);
					this.SendPropertyChanging();
					this._idPlantilla = value;
					this.SendPropertyChanged("idPlantilla");
					this.OnidPlantillaChanged();
				}
			}
		}
		
		[Column(Storage="_imgUrl", DbType="NChar(256)")]
		public string imgUrl
		{
			get
			{
				return this._imgUrl;
			}
			set
			{
				if ((this._imgUrl != value))
				{
					this.OnimgUrlChanging(value);
					this.SendPropertyChanging();
					this._imgUrl = value;
					this.SendPropertyChanged("imgUrl");
					this.OnimgUrlChanged();
				}
			}
		}
		
		[Association(Name="FormaPago_Carrito", Storage="_Carritos", ThisKey="id", OtherKey="idFormaPago")]
		public EntitySet<Carrito> Carritos
		{
			get
			{
				return this._Carritos;
			}
			set
			{
				this._Carritos.Assign(value);
			}
		}
		
		[Association(Name="Plantilla_FormaPago", Storage="_Plantilla", ThisKey="idPlantilla", OtherKey="id", IsForeignKey=true)]
		public Plantilla Plantilla
		{
			get
			{
				return this._Plantilla.Entity;
			}
			set
			{
				Plantilla previousValue = this._Plantilla.Entity;
				if (((previousValue != value) 
							|| (this._Plantilla.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plantilla.Entity = null;
						previousValue.FormaPagos.Remove(this);
					}
					this._Plantilla.Entity = value;
					if ((value != null))
					{
						value.FormaPagos.Add(this);
						this._idPlantilla = value.id;
					}
					else
					{
						this._idPlantilla = default(int);
					}
					this.SendPropertyChanged("Plantilla");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Carritos(Carrito entity)
		{
			this.SendPropertyChanging();
			entity.FormaPago = this;
		}
		
		private void detach_Carritos(Carrito entity)
		{
			this.SendPropertyChanging();
			entity.FormaPago = null;
		}
	}
	
	[Table(Name="dbo.Calificacions")]
	public partial class Calificacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _puntuacion;
		
		private string _revision;
		
		private int _idCliente;
		
		private int _idArticulo;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Articulo> _Articulo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpuntuacionChanging(int value);
    partial void OnpuntuacionChanged();
    partial void OnrevisionChanging(string value);
    partial void OnrevisionChanged();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnidArticuloChanging(int value);
    partial void OnidArticuloChanged();
    #endregion
		
		public Calificacion()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Articulo = default(EntityRef<Articulo>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_puntuacion", DbType="Int NOT NULL")]
		public int puntuacion
		{
			get
			{
				return this._puntuacion;
			}
			set
			{
				if ((this._puntuacion != value))
				{
					this.OnpuntuacionChanging(value);
					this.SendPropertyChanging();
					this._puntuacion = value;
					this.SendPropertyChanged("puntuacion");
					this.OnpuntuacionChanged();
				}
			}
		}
		
		[Column(Storage="_revision", DbType="NChar(350)")]
		public string revision
		{
			get
			{
				return this._revision;
			}
			set
			{
				if ((this._revision != value))
				{
					this.OnrevisionChanging(value);
					this.SendPropertyChanging();
					this._revision = value;
					this.SendPropertyChanged("revision");
					this.OnrevisionChanged();
				}
			}
		}
		
		[Column(Storage="_idCliente", DbType="Int NOT NULL")]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_idArticulo", DbType="Int NOT NULL")]
		public int idArticulo
		{
			get
			{
				return this._idArticulo;
			}
			set
			{
				if ((this._idArticulo != value))
				{
					if (this._Articulo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidArticuloChanging(value);
					this.SendPropertyChanging();
					this._idArticulo = value;
					this.SendPropertyChanged("idArticulo");
					this.OnidArticuloChanged();
				}
			}
		}
		
		[Association(Name="Cliente_Calificacion", Storage="_Cliente", ThisKey="idCliente", OtherKey="id", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Calificacions.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Calificacions.Add(this);
						this._idCliente = value.id;
					}
					else
					{
						this._idCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[Association(Name="Articulo_Calificacion", Storage="_Articulo", ThisKey="idArticulo", OtherKey="id", IsForeignKey=true)]
		public Articulo Articulo
		{
			get
			{
				return this._Articulo.Entity;
			}
			set
			{
				Articulo previousValue = this._Articulo.Entity;
				if (((previousValue != value) 
							|| (this._Articulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articulo.Entity = null;
						previousValue.Calificacions.Remove(this);
					}
					this._Articulo.Entity = value;
					if ((value != null))
					{
						value.Calificacions.Add(this);
						this._idArticulo = value.id;
					}
					else
					{
						this._idArticulo = default(int);
					}
					this.SendPropertyChanged("Articulo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Internos")]
	public partial class Interno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private EntityRef<Articulo> _Articulo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public Interno()
		{
			this._Articulo = default(EntityRef<Articulo>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Articulo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Association(Name="Articulo_Interno", Storage="_Articulo", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Articulo Articulo
		{
			get
			{
				return this._Articulo.Entity;
			}
			set
			{
				Articulo previousValue = this._Articulo.Entity;
				if (((previousValue != value) 
							|| (this._Articulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articulo.Entity = null;
						previousValue.Interno = null;
					}
					this._Articulo.Entity = value;
					if ((value != null))
					{
						value.Interno = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Articulo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Externos")]
	public partial class Externo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _claveExterna;
		
		private int _idProveedor;
		
		private EntityRef<Proveedor> _Proveedor;
		
		private EntityRef<Articulo> _Articulo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnclaveExternaChanging(string value);
    partial void OnclaveExternaChanged();
    partial void OnidProveedorChanging(int value);
    partial void OnidProveedorChanged();
    #endregion
		
		public Externo()
		{
			this._Proveedor = default(EntityRef<Proveedor>);
			this._Articulo = default(EntityRef<Articulo>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Articulo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_claveExterna", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string claveExterna
		{
			get
			{
				return this._claveExterna;
			}
			set
			{
				if ((this._claveExterna != value))
				{
					this.OnclaveExternaChanging(value);
					this.SendPropertyChanging();
					this._claveExterna = value;
					this.SendPropertyChanged("claveExterna");
					this.OnclaveExternaChanged();
				}
			}
		}
		
		[Column(Storage="_idProveedor", DbType="Int NOT NULL")]
		public int idProveedor
		{
			get
			{
				return this._idProveedor;
			}
			set
			{
				if ((this._idProveedor != value))
				{
					if (this._Proveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProveedorChanging(value);
					this.SendPropertyChanging();
					this._idProveedor = value;
					this.SendPropertyChanged("idProveedor");
					this.OnidProveedorChanged();
				}
			}
		}
		
		[Association(Name="Proveedor_Externo", Storage="_Proveedor", ThisKey="idProveedor", OtherKey="id", IsForeignKey=true)]
		public Proveedor Proveedor
		{
			get
			{
				return this._Proveedor.Entity;
			}
			set
			{
				Proveedor previousValue = this._Proveedor.Entity;
				if (((previousValue != value) 
							|| (this._Proveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedor.Entity = null;
						previousValue.Externos.Remove(this);
					}
					this._Proveedor.Entity = value;
					if ((value != null))
					{
						value.Externos.Add(this);
						this._idProveedor = value.id;
					}
					else
					{
						this._idProveedor = default(int);
					}
					this.SendPropertyChanged("Proveedor");
				}
			}
		}
		
		[Association(Name="Articulo_Externo", Storage="_Articulo", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Articulo Articulo
		{
			get
			{
				return this._Articulo.Entity;
			}
			set
			{
				Articulo previousValue = this._Articulo.Entity;
				if (((previousValue != value) 
							|| (this._Articulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articulo.Entity = null;
						previousValue.Externo = null;
					}
					this._Articulo.Entity = value;
					if ((value != null))
					{
						value.Externo = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Articulo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Proveedors")]
	public partial class Proveedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _url;
		
		private EntitySet<Externo> _Externos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    #endregion
		
		public Proveedor()
		{
			this._Externos = new EntitySet<Externo>(new Action<Externo>(this.attach_Externos), new Action<Externo>(this.detach_Externos));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NChar(250) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Association(Name="Proveedor_Externo", Storage="_Externos", ThisKey="id", OtherKey="idProveedor")]
		public EntitySet<Externo> Externos
		{
			get
			{
				return this._Externos;
			}
			set
			{
				this._Externos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Externos(Externo entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = this;
		}
		
		private void detach_Externos(Externo entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = null;
		}
	}
	
	[Table(Name="dbo.Sucursals")]
	public partial class Sucursal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _direccion;
		
		private string _telefono;
		
		private string _ciudad;
		
		private double _latitud;
		
		private double _longitud;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OnciudadChanging(string value);
    partial void OnciudadChanged();
    partial void OnlatitudChanging(double value);
    partial void OnlatitudChanged();
    partial void OnlongitudChanging(double value);
    partial void OnlongitudChanged();
    #endregion
		
		public Sucursal()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_direccion", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[Column(Storage="_telefono", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[Column(Storage="_ciudad", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string ciudad
		{
			get
			{
				return this._ciudad;
			}
			set
			{
				if ((this._ciudad != value))
				{
					this.OnciudadChanging(value);
					this.SendPropertyChanging();
					this._ciudad = value;
					this.SendPropertyChanged("ciudad");
					this.OnciudadChanged();
				}
			}
		}
		
		[Column(Storage="_latitud", DbType="Float NOT NULL")]
		public double latitud
		{
			get
			{
				return this._latitud;
			}
			set
			{
				if ((this._latitud != value))
				{
					this.OnlatitudChanging(value);
					this.SendPropertyChanging();
					this._latitud = value;
					this.SendPropertyChanged("latitud");
					this.OnlatitudChanged();
				}
			}
		}
		
		[Column(Storage="_longitud", DbType="Float NOT NULL")]
		public double longitud
		{
			get
			{
				return this._longitud;
			}
			set
			{
				if ((this._longitud != value))
				{
					this.OnlongitudChanging(value);
					this.SendPropertyChanging();
					this._longitud = value;
					this.SendPropertyChanged("longitud");
					this.OnlongitudChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HistoricoCarritos")]
	public partial class HistoricoCarrito : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCliente;
		
		private int _idCarrito;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Carrito> _Carrito;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnidCarritoChanging(int value);
    partial void OnidCarritoChanged();
    #endregion
		
		public HistoricoCarrito()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Carrito = default(EntityRef<Carrito>);
			OnCreated();
		}
		
		[Column(Storage="_idCliente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_idCarrito", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCarrito
		{
			get
			{
				return this._idCarrito;
			}
			set
			{
				if ((this._idCarrito != value))
				{
					if (this._Carrito.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCarritoChanging(value);
					this.SendPropertyChanging();
					this._idCarrito = value;
					this.SendPropertyChanged("idCarrito");
					this.OnidCarritoChanged();
				}
			}
		}
		
		[Association(Name="Cliente_HistoricoCarrito", Storage="_Cliente", ThisKey="idCliente", OtherKey="id", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.HistoricoCarritos.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.HistoricoCarritos.Add(this);
						this._idCliente = value.id;
					}
					else
					{
						this._idCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[Association(Name="Carrito_HistoricoCarrito", Storage="_Carrito", ThisKey="idCarrito", OtherKey="id", IsForeignKey=true)]
		public Carrito Carrito
		{
			get
			{
				return this._Carrito.Entity;
			}
			set
			{
				Carrito previousValue = this._Carrito.Entity;
				if (((previousValue != value) 
							|| (this._Carrito.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carrito.Entity = null;
						previousValue.HistoricoCarritos.Remove(this);
					}
					this._Carrito.Entity = value;
					if ((value != null))
					{
						value.HistoricoCarritos.Add(this);
						this._idCarrito = value.id;
					}
					else
					{
						this._idCarrito = default(int);
					}
					this.SendPropertyChanged("Carrito");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TagArticulos")]
	public partial class TagArticulo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idArticulo;
		
		private int _idCloudItem;
		
		private EntityRef<CloudItem> _CloudItem;
		
		private EntityRef<Articulo> _Articulo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidArticuloChanging(int value);
    partial void OnidArticuloChanged();
    partial void OnidCloudItemChanging(int value);
    partial void OnidCloudItemChanged();
    #endregion
		
		public TagArticulo()
		{
			this._CloudItem = default(EntityRef<CloudItem>);
			this._Articulo = default(EntityRef<Articulo>);
			OnCreated();
		}
		
		[Column(Storage="_idArticulo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idArticulo
		{
			get
			{
				return this._idArticulo;
			}
			set
			{
				if ((this._idArticulo != value))
				{
					if (this._CloudItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidArticuloChanging(value);
					this.SendPropertyChanging();
					this._idArticulo = value;
					this.SendPropertyChanged("idArticulo");
					this.OnidArticuloChanged();
				}
			}
		}
		
		[Column(Storage="_idCloudItem", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCloudItem
		{
			get
			{
				return this._idCloudItem;
			}
			set
			{
				if ((this._idCloudItem != value))
				{
					this.OnidCloudItemChanging(value);
					this.SendPropertyChanging();
					this._idCloudItem = value;
					this.SendPropertyChanged("idCloudItem");
					this.OnidCloudItemChanged();
				}
			}
		}
		
		[Association(Name="CloudItem_TagArticulo", Storage="_CloudItem", ThisKey="idArticulo", OtherKey="id", IsForeignKey=true)]
		public CloudItem CloudItem
		{
			get
			{
				return this._CloudItem.Entity;
			}
			set
			{
				CloudItem previousValue = this._CloudItem.Entity;
				if (((previousValue != value) 
							|| (this._CloudItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CloudItem.Entity = null;
						previousValue.TagArticulos.Remove(this);
					}
					this._CloudItem.Entity = value;
					if ((value != null))
					{
						value.TagArticulos.Add(this);
						this._idArticulo = value.id;
					}
					else
					{
						this._idArticulo = default(int);
					}
					this.SendPropertyChanged("CloudItem");
				}
			}
		}
		
		[Association(Name="Articulo_TagArticulo", Storage="_Articulo", ThisKey="idArticulo", OtherKey="id", IsForeignKey=true)]
		public Articulo Articulo
		{
			get
			{
				return this._Articulo.Entity;
			}
			set
			{
				Articulo previousValue = this._Articulo.Entity;
				if (((previousValue != value) 
							|| (this._Articulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articulo.Entity = null;
						previousValue.TagArticulos.Remove(this);
					}
					this._Articulo.Entity = value;
					if ((value != null))
					{
						value.TagArticulos.Add(this);
						this._idArticulo = value.id;
					}
					else
					{
						this._idArticulo = default(int);
					}
					this.SendPropertyChanged("Articulo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CloudItems")]
	public partial class CloudItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _weight;
		
		private string _url;
		
		private string _tooltip;
		
		private int _idUsuario;
		
		private EntitySet<TagArticulo> _TagArticulos;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnweightChanging(int value);
    partial void OnweightChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OntooltipChanging(string value);
    partial void OntooltipChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    #endregion
		
		public CloudItem()
		{
			this._TagArticulos = new EntitySet<TagArticulo>(new Action<TagArticulo>(this.attach_TagArticulos), new Action<TagArticulo>(this.detach_TagArticulos));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_weight", DbType="Int NOT NULL")]
		public int weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Column(Storage="_tooltip", DbType="NVarChar(MAX)")]
		public string tooltip
		{
			get
			{
				return this._tooltip;
			}
			set
			{
				if ((this._tooltip != value))
				{
					this.OntooltipChanging(value);
					this.SendPropertyChanging();
					this._tooltip = value;
					this.SendPropertyChanged("tooltip");
					this.OntooltipChanged();
				}
			}
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[Association(Name="CloudItem_TagArticulo", Storage="_TagArticulos", ThisKey="id", OtherKey="idArticulo")]
		public EntitySet<TagArticulo> TagArticulos
		{
			get
			{
				return this._TagArticulos;
			}
			set
			{
				this._TagArticulos.Assign(value);
			}
		}
		
		[Association(Name="Usuario_CloudItem", Storage="_Usuario", ThisKey="idUsuario", OtherKey="id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.CloudItems.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.CloudItems.Add(this);
						this._idUsuario = value.id;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagArticulos(TagArticulo entity)
		{
			this.SendPropertyChanging();
			entity.CloudItem = this;
		}
		
		private void detach_TagArticulos(TagArticulo entity)
		{
			this.SendPropertyChanging();
			entity.CloudItem = null;
		}
	}
	
	[Table(Name="dbo.Articulos")]
	public partial class Articulo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private System.Nullable<int> _idCategoria;
		
		private double _precio;
		
		private string _imagen;
		
		private EntitySet<ArtCant> _ArtCants;
		
		private EntitySet<Registro> _Registros;
		
		private EntitySet<Calificacion> _Calificacions;
		
		private EntityRef<Interno> _Interno;
		
		private EntityRef<Externo> _Externo;
		
		private EntitySet<TagArticulo> _TagArticulos;
		
		private EntityRef<Categoria> _Categoria;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnidCategoriaChanging(System.Nullable<int> value);
    partial void OnidCategoriaChanged();
    partial void OnprecioChanging(double value);
    partial void OnprecioChanged();
    partial void OnimagenChanging(string value);
    partial void OnimagenChanged();
    #endregion
		
		public Articulo()
		{
			this._ArtCants = new EntitySet<ArtCant>(new Action<ArtCant>(this.attach_ArtCants), new Action<ArtCant>(this.detach_ArtCants));
			this._Registros = new EntitySet<Registro>(new Action<Registro>(this.attach_Registros), new Action<Registro>(this.detach_Registros));
			this._Calificacions = new EntitySet<Calificacion>(new Action<Calificacion>(this.attach_Calificacions), new Action<Calificacion>(this.detach_Calificacions));
			this._Interno = default(EntityRef<Interno>);
			this._Externo = default(EntityRef<Externo>);
			this._TagArticulos = new EntitySet<TagArticulo>(new Action<TagArticulo>(this.attach_TagArticulos), new Action<TagArticulo>(this.detach_TagArticulos));
			this._Categoria = default(EntityRef<Categoria>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_idCategoria", DbType="Int")]
		public System.Nullable<int> idCategoria
		{
			get
			{
				return this._idCategoria;
			}
			set
			{
				if ((this._idCategoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCategoriaChanging(value);
					this.SendPropertyChanging();
					this._idCategoria = value;
					this.SendPropertyChanged("idCategoria");
					this.OnidCategoriaChanged();
				}
			}
		}
		
		[Column(Storage="_precio", DbType="Float NOT NULL")]
		public double precio
		{
			get
			{
				return this._precio;
			}
			set
			{
				if ((this._precio != value))
				{
					this.OnprecioChanging(value);
					this.SendPropertyChanging();
					this._precio = value;
					this.SendPropertyChanged("precio");
					this.OnprecioChanged();
				}
			}
		}
		
		[Column(Storage="_imagen", DbType="NChar(500)")]
		public string imagen
		{
			get
			{
				return this._imagen;
			}
			set
			{
				if ((this._imagen != value))
				{
					this.OnimagenChanging(value);
					this.SendPropertyChanging();
					this._imagen = value;
					this.SendPropertyChanged("imagen");
					this.OnimagenChanged();
				}
			}
		}
		
		[Association(Name="Articulo_ArtCant", Storage="_ArtCants", ThisKey="id", OtherKey="idArticulo")]
		public EntitySet<ArtCant> ArtCants
		{
			get
			{
				return this._ArtCants;
			}
			set
			{
				this._ArtCants.Assign(value);
			}
		}
		
		[Association(Name="Articulo_Registro", Storage="_Registros", ThisKey="id", OtherKey="idArticulo")]
		public EntitySet<Registro> Registros
		{
			get
			{
				return this._Registros;
			}
			set
			{
				this._Registros.Assign(value);
			}
		}
		
		[Association(Name="Articulo_Calificacion", Storage="_Calificacions", ThisKey="id", OtherKey="idArticulo")]
		public EntitySet<Calificacion> Calificacions
		{
			get
			{
				return this._Calificacions;
			}
			set
			{
				this._Calificacions.Assign(value);
			}
		}
		
		[Association(Name="Articulo_Interno", Storage="_Interno", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Interno Interno
		{
			get
			{
				return this._Interno.Entity;
			}
			set
			{
				Interno previousValue = this._Interno.Entity;
				if (((previousValue != value) 
							|| (this._Interno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Interno.Entity = null;
						previousValue.Articulo = null;
					}
					this._Interno.Entity = value;
					if ((value != null))
					{
						value.Articulo = this;
					}
					this.SendPropertyChanged("Interno");
				}
			}
		}
		
		[Association(Name="Articulo_Externo", Storage="_Externo", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Externo Externo
		{
			get
			{
				return this._Externo.Entity;
			}
			set
			{
				Externo previousValue = this._Externo.Entity;
				if (((previousValue != value) 
							|| (this._Externo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Externo.Entity = null;
						previousValue.Articulo = null;
					}
					this._Externo.Entity = value;
					if ((value != null))
					{
						value.Articulo = this;
					}
					this.SendPropertyChanged("Externo");
				}
			}
		}
		
		[Association(Name="Articulo_TagArticulo", Storage="_TagArticulos", ThisKey="id", OtherKey="idArticulo")]
		public EntitySet<TagArticulo> TagArticulos
		{
			get
			{
				return this._TagArticulos;
			}
			set
			{
				this._TagArticulos.Assign(value);
			}
		}
		
		[Association(Name="Categoria_Articulo", Storage="_Categoria", ThisKey="idCategoria", OtherKey="id", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Articulos.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Articulos.Add(this);
						this._idCategoria = value.id;
					}
					else
					{
						this._idCategoria = default(Nullable<int>);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArtCants(ArtCant entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = this;
		}
		
		private void detach_ArtCants(ArtCant entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = null;
		}
		
		private void attach_Registros(Registro entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = this;
		}
		
		private void detach_Registros(Registro entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = null;
		}
		
		private void attach_Calificacions(Calificacion entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = this;
		}
		
		private void detach_Calificacions(Calificacion entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = null;
		}
		
		private void attach_TagArticulos(TagArticulo entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = this;
		}
		
		private void detach_TagArticulos(TagArticulo entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = null;
		}
	}
	
	[Table(Name="dbo.Campos")]
	public partial class Campo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idPlantilla;
		
		private string _nombre;
		
		private string _tipo;
		
		private EntitySet<Registro> _Registros;
		
		private EntityRef<Plantilla> _Plantilla;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidPlantillaChanging(int value);
    partial void OnidPlantillaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    #endregion
		
		public Campo()
		{
			this._Registros = new EntitySet<Registro>(new Action<Registro>(this.attach_Registros), new Action<Registro>(this.detach_Registros));
			this._Plantilla = default(EntityRef<Plantilla>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_idPlantilla", DbType="Int NOT NULL")]
		public int idPlantilla
		{
			get
			{
				return this._idPlantilla;
			}
			set
			{
				if ((this._idPlantilla != value))
				{
					if (this._Plantilla.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPlantillaChanging(value);
					this.SendPropertyChanging();
					this._idPlantilla = value;
					this.SendPropertyChanged("idPlantilla");
					this.OnidPlantillaChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_tipo", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[Association(Name="Campo_Registro", Storage="_Registros", ThisKey="id", OtherKey="idCampo")]
		public EntitySet<Registro> Registros
		{
			get
			{
				return this._Registros;
			}
			set
			{
				this._Registros.Assign(value);
			}
		}
		
		[Association(Name="Plantilla_Campo", Storage="_Plantilla", ThisKey="idPlantilla", OtherKey="id", IsForeignKey=true)]
		public Plantilla Plantilla
		{
			get
			{
				return this._Plantilla.Entity;
			}
			set
			{
				Plantilla previousValue = this._Plantilla.Entity;
				if (((previousValue != value) 
							|| (this._Plantilla.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plantilla.Entity = null;
						previousValue.Campos.Remove(this);
					}
					this._Plantilla.Entity = value;
					if ((value != null))
					{
						value.Campos.Add(this);
						this._idPlantilla = value.id;
					}
					else
					{
						this._idPlantilla = default(int);
					}
					this.SendPropertyChanged("Plantilla");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Registros(Registro entity)
		{
			this.SendPropertyChanging();
			entity.Campo = this;
		}
		
		private void detach_Registros(Registro entity)
		{
			this.SendPropertyChanging();
			entity.Campo = null;
		}
	}
	
	[Table(Name="dbo.Categorias")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private System.Nullable<int> _idSuperCategoria;
		
		private System.Nullable<int> _idPlantilla;
		
		private EntitySet<Articulo> _Articulos;
		
		private EntitySet<Categoria> _Categorias;
		
		private EntityRef<Categoria> _Categoria1;
		
		private EntityRef<Plantilla> _Plantilla;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnidSuperCategoriaChanging(System.Nullable<int> value);
    partial void OnidSuperCategoriaChanged();
    partial void OnidPlantillaChanging(System.Nullable<int> value);
    partial void OnidPlantillaChanged();
    #endregion
		
		public Categoria()
		{
			this._Articulos = new EntitySet<Articulo>(new Action<Articulo>(this.attach_Articulos), new Action<Articulo>(this.detach_Articulos));
			this._Categorias = new EntitySet<Categoria>(new Action<Categoria>(this.attach_Categorias), new Action<Categoria>(this.detach_Categorias));
			this._Categoria1 = default(EntityRef<Categoria>);
			this._Plantilla = default(EntityRef<Plantilla>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_idSuperCategoria", DbType="Int")]
		public System.Nullable<int> idSuperCategoria
		{
			get
			{
				return this._idSuperCategoria;
			}
			set
			{
				if ((this._idSuperCategoria != value))
				{
					if (this._Categoria1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSuperCategoriaChanging(value);
					this.SendPropertyChanging();
					this._idSuperCategoria = value;
					this.SendPropertyChanged("idSuperCategoria");
					this.OnidSuperCategoriaChanged();
				}
			}
		}
		
		[Column(Storage="_idPlantilla", DbType="Int")]
		public System.Nullable<int> idPlantilla
		{
			get
			{
				return this._idPlantilla;
			}
			set
			{
				if ((this._idPlantilla != value))
				{
					if (this._Plantilla.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPlantillaChanging(value);
					this.SendPropertyChanging();
					this._idPlantilla = value;
					this.SendPropertyChanged("idPlantilla");
					this.OnidPlantillaChanged();
				}
			}
		}
		
		[Association(Name="Categoria_Articulo", Storage="_Articulos", ThisKey="id", OtherKey="idCategoria")]
		public EntitySet<Articulo> Articulos
		{
			get
			{
				return this._Articulos;
			}
			set
			{
				this._Articulos.Assign(value);
			}
		}
		
		[Association(Name="Categoria_Categoria", Storage="_Categorias", ThisKey="id", OtherKey="idSuperCategoria")]
		public EntitySet<Categoria> Categorias
		{
			get
			{
				return this._Categorias;
			}
			set
			{
				this._Categorias.Assign(value);
			}
		}
		
		[Association(Name="Categoria_Categoria", Storage="_Categoria1", ThisKey="idSuperCategoria", OtherKey="id", IsForeignKey=true)]
		public Categoria Categoria1
		{
			get
			{
				return this._Categoria1.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria1.Entity;
				if (((previousValue != value) 
							|| (this._Categoria1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria1.Entity = null;
						previousValue.Categorias.Remove(this);
					}
					this._Categoria1.Entity = value;
					if ((value != null))
					{
						value.Categorias.Add(this);
						this._idSuperCategoria = value.id;
					}
					else
					{
						this._idSuperCategoria = default(Nullable<int>);
					}
					this.SendPropertyChanged("Categoria1");
				}
			}
		}
		
		[Association(Name="Plantilla_Categoria", Storage="_Plantilla", ThisKey="idPlantilla", OtherKey="id", IsForeignKey=true)]
		public Plantilla Plantilla
		{
			get
			{
				return this._Plantilla.Entity;
			}
			set
			{
				Plantilla previousValue = this._Plantilla.Entity;
				if (((previousValue != value) 
							|| (this._Plantilla.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plantilla.Entity = null;
						previousValue.Categorias.Remove(this);
					}
					this._Plantilla.Entity = value;
					if ((value != null))
					{
						value.Categorias.Add(this);
						this._idPlantilla = value.id;
					}
					else
					{
						this._idPlantilla = default(Nullable<int>);
					}
					this.SendPropertyChanged("Plantilla");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articulos(Articulo entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Articulos(Articulo entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
		
		private void attach_Categorias(Categoria entity)
		{
			this.SendPropertyChanging();
			entity.Categoria1 = this;
		}
		
		private void detach_Categorias(Categoria entity)
		{
			this.SendPropertyChanging();
			entity.Categoria1 = null;
		}
	}
	
	[Table(Name="dbo.Usuarios")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _login;
		
		private string _password;
		
		private short _esAdmin;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntitySet<CloudItem> _CloudItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnesAdminChanging(short value);
    partial void OnesAdminChanged();
    #endregion
		
		public Usuario()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._CloudItems = new EntitySet<CloudItem>(new Action<CloudItem>(this.attach_CloudItems), new Action<CloudItem>(this.detach_CloudItems));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_login", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[Column(Storage="_password", DbType="NChar(10)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[Column(Storage="_esAdmin", DbType="SmallInt NOT NULL")]
		public short esAdmin
		{
			get
			{
				return this._esAdmin;
			}
			set
			{
				if ((this._esAdmin != value))
				{
					this.OnesAdminChanging(value);
					this.SendPropertyChanging();
					this._esAdmin = value;
					this.SendPropertyChanged("esAdmin");
					this.OnesAdminChanged();
				}
			}
		}
		
		[Association(Name="Usuario_Cliente", Storage="_Cliente", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Usuario = null;
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Usuario = this;
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[Association(Name="Usuario_CloudItem", Storage="_CloudItems", ThisKey="id", OtherKey="idUsuario")]
		public EntitySet<CloudItem> CloudItems
		{
			get
			{
				return this._CloudItems;
			}
			set
			{
				this._CloudItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CloudItems(CloudItem entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_CloudItems(CloudItem entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[Table(Name="dbo.Carritos")]
	public partial class Carrito : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _fechaCompra;
		
		private double _montoTotal;
		
		private System.Nullable<int> _idFormaPago;
		
		private string _token;
		
		private int _estado;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntitySet<ArtCant> _ArtCants;
		
		private EntitySet<HistoricoCarrito> _HistoricoCarritos;
		
		private EntityRef<FormaPago> _FormaPago;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfechaCompraChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaCompraChanged();
    partial void OnmontoTotalChanging(double value);
    partial void OnmontoTotalChanged();
    partial void OnidFormaPagoChanging(System.Nullable<int> value);
    partial void OnidFormaPagoChanged();
    partial void OntokenChanging(string value);
    partial void OntokenChanged();
    partial void OnestadoChanging(int value);
    partial void OnestadoChanged();
    #endregion
		
		public Carrito()
		{
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._ArtCants = new EntitySet<ArtCant>(new Action<ArtCant>(this.attach_ArtCants), new Action<ArtCant>(this.detach_ArtCants));
			this._HistoricoCarritos = new EntitySet<HistoricoCarrito>(new Action<HistoricoCarrito>(this.attach_HistoricoCarritos), new Action<HistoricoCarrito>(this.detach_HistoricoCarritos));
			this._FormaPago = default(EntityRef<FormaPago>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_fechaCompra", DbType="DateTime")]
		public System.Nullable<System.DateTime> fechaCompra
		{
			get
			{
				return this._fechaCompra;
			}
			set
			{
				if ((this._fechaCompra != value))
				{
					this.OnfechaCompraChanging(value);
					this.SendPropertyChanging();
					this._fechaCompra = value;
					this.SendPropertyChanged("fechaCompra");
					this.OnfechaCompraChanged();
				}
			}
		}
		
		[Column(Storage="_montoTotal", DbType="Float NOT NULL")]
		public double montoTotal
		{
			get
			{
				return this._montoTotal;
			}
			set
			{
				if ((this._montoTotal != value))
				{
					this.OnmontoTotalChanging(value);
					this.SendPropertyChanging();
					this._montoTotal = value;
					this.SendPropertyChanged("montoTotal");
					this.OnmontoTotalChanged();
				}
			}
		}
		
		[Column(Storage="_idFormaPago", DbType="Int")]
		public System.Nullable<int> idFormaPago
		{
			get
			{
				return this._idFormaPago;
			}
			set
			{
				if ((this._idFormaPago != value))
				{
					if (this._FormaPago.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFormaPagoChanging(value);
					this.SendPropertyChanging();
					this._idFormaPago = value;
					this.SendPropertyChanged("idFormaPago");
					this.OnidFormaPagoChanged();
				}
			}
		}
		
		[Column(Storage="_token", DbType="NChar(100)")]
		public string token
		{
			get
			{
				return this._token;
			}
			set
			{
				if ((this._token != value))
				{
					this.OntokenChanging(value);
					this.SendPropertyChanging();
					this._token = value;
					this.SendPropertyChanged("token");
					this.OntokenChanged();
				}
			}
		}
		
		[Column(Storage="_estado", DbType="Int NOT NULL")]
		public int estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[Association(Name="Carrito_Cliente", Storage="_Clientes", ThisKey="id", OtherKey="idCarritoActual")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[Association(Name="Carrito_ArtCant", Storage="_ArtCants", ThisKey="id", OtherKey="idCarrito")]
		public EntitySet<ArtCant> ArtCants
		{
			get
			{
				return this._ArtCants;
			}
			set
			{
				this._ArtCants.Assign(value);
			}
		}
		
		[Association(Name="Carrito_HistoricoCarrito", Storage="_HistoricoCarritos", ThisKey="id", OtherKey="idCarrito")]
		public EntitySet<HistoricoCarrito> HistoricoCarritos
		{
			get
			{
				return this._HistoricoCarritos;
			}
			set
			{
				this._HistoricoCarritos.Assign(value);
			}
		}
		
		[Association(Name="FormaPago_Carrito", Storage="_FormaPago", ThisKey="idFormaPago", OtherKey="id", IsForeignKey=true)]
		public FormaPago FormaPago
		{
			get
			{
				return this._FormaPago.Entity;
			}
			set
			{
				FormaPago previousValue = this._FormaPago.Entity;
				if (((previousValue != value) 
							|| (this._FormaPago.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FormaPago.Entity = null;
						previousValue.Carritos.Remove(this);
					}
					this._FormaPago.Entity = value;
					if ((value != null))
					{
						value.Carritos.Add(this);
						this._idFormaPago = value.id;
					}
					else
					{
						this._idFormaPago = default(Nullable<int>);
					}
					this.SendPropertyChanged("FormaPago");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Carrito = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Carrito = null;
		}
		
		private void attach_ArtCants(ArtCant entity)
		{
			this.SendPropertyChanging();
			entity.Carrito = this;
		}
		
		private void detach_ArtCants(ArtCant entity)
		{
			this.SendPropertyChanging();
			entity.Carrito = null;
		}
		
		private void attach_HistoricoCarritos(HistoricoCarrito entity)
		{
			this.SendPropertyChanging();
			entity.Carrito = this;
		}
		
		private void detach_HistoricoCarritos(HistoricoCarrito entity)
		{
			this.SendPropertyChanging();
			entity.Carrito = null;
		}
	}
}
#pragma warning restore 1591
