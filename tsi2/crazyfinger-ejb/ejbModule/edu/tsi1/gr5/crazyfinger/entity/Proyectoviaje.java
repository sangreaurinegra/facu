package edu.tsi1.gr5.crazyfinger.entity;

// Generated 03-oct-2009 15:52:18 by Hibernate Tools 3.2.4.GA

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Proyectoviaje generated by hbm2java
 */
@Entity
@Table(name = "proyectoviaje")
public class Proyectoviaje implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4724131753065437952L;
	
	private long idProyectoviaje;
	private Usuario usuario;
	private int estado;
	private Set<Nodopv> nodopvs = new HashSet<Nodopv>(0);
	private String descripcion;
	private Set<InvitacionProyecto> invitaciones = new HashSet<InvitacionProyecto>(0);
	
	public Proyectoviaje() {
	}

	public Proyectoviaje(long idProyectoviaje, Usuario usuario, int estado) {
		this.idProyectoviaje = idProyectoviaje;
		this.usuario = usuario;
		this.estado = estado;
	}

	public Proyectoviaje(long idProyectoviaje, Usuario usuario, int estado,
			Set<Nodopv> nodopvs) {
		this.idProyectoviaje = idProyectoviaje;
		this.usuario = usuario;
		this.estado = estado;
		this.nodopvs = nodopvs;
	}

	@GeneratedValue
	@Id
	@Column(name = "id_proyectoviaje", unique = true, nullable = false)
	public long getIdProyectoviaje() {
		return this.idProyectoviaje;
	}

	public void setIdProyectoviaje(long idProyectoviaje) {
		this.idProyectoviaje = idProyectoviaje;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuariocreador", nullable = false)
	@NotNull
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "estado", nullable = false)
	public int getEstado() {
		return this.estado;
	}

	public void setEstado(int estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "proyectoviaje")
	public Set<Nodopv> getNodopvs() {
		return this.nodopvs;
	}

	public void setNodopvs(Set<Nodopv> nodopvs) {
		this.nodopvs = nodopvs;
	}

	@Column(name = "descripcion", nullable = false, length = 300)
	@NotNull
	@Length(max = 300)
	public String getDescripcion() {
		return descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "proyecto")
	public Set<InvitacionProyecto> getInvitaciones() {
		return invitaciones;
	}

	public void setInvitaciones(Set<InvitacionProyecto> invitaciones) {
		this.invitaciones = invitaciones;
	}

	public List<Nodopv> listaNodos(){
		if(nodopvs != null)
			if(nodopvs.size() > 0)
				return new ArrayList<Nodopv>(nodopvs);
			else
				return new ArrayList<Nodopv>();
		return null;
	}
	
}
